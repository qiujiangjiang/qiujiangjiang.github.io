import{_ as i,x as a,ae as e,v as t}from"./chunks/framework.BPups8zc.js";const k=JSON.parse('{"title":"vim中如何使用外部命令","description":"","frontmatter":{"title":"vim中如何使用外部命令","tags":["linux","vim"],"category":"vim","abbrlink":"363c56fa","date":"2023-01-19T21:46:50.000Z"},"headers":[],"relativePath":"docs/vim中如何使用外部命令.md","filePath":"docs/vim中如何使用外部命令.md"}'),l={name:"docs/vim中如何使用外部命令.md"};function n(h,s,p,d,o,c){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="执行外部命令" tabindex="-1">执行外部命令 <a class="header-anchor" href="#执行外部命令" aria-label="Permalink to &quot;执行外部命令&quot;">​</a></h1><p>在vim中想要使用shell命令或者执行其他外部脚本，只需要在命令前加上一个<code>!</code>就可以了。 比如我想在vim中编辑脚本的时候查看ls命令:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">!ls</span></span></code></pre></div><h1 id="读取外部命令执行结果" tabindex="-1">读取外部命令执行结果 <a class="header-anchor" href="#读取外部命令执行结果" aria-label="Permalink to &quot;读取外部命令执行结果&quot;">​</a></h1><p>但是只是执行外部命令还是不够的，通常情况下读写的情况更多，这种情况也只需要在执行命令<code>!</code>符号之前加上r(read)就可以了。 如读取ls命令的执行结果:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> !ls</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # ls执行的结果会直接写在当前vim中</span></span></code></pre></div><h1 id="将vim语句写入外部命令" tabindex="-1">将vim语句写入外部命令 <a class="header-anchor" href="#将vim语句写入外部命令" aria-label="Permalink to &quot;将vim语句写入外部命令&quot;">​</a></h1><p>如果当前vim编辑的正是js文件有两句可执行语句:</p><div class="language-JavaScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;好好学习&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;天天向上&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>并且安装了<code>nodejs</code>，那么就可以通过将vim当前内容写入到nodejs中执行。 同样是在外部命令执行符号<code>!</code>之前加上w(write)具体如下:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> !node</span></span></code></pre></div>`,11)]))}const g=i(l,[["render",n]]);export{k as __pageData,g as default};
